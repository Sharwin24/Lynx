#! /usr/bin/env python3

"""
This is the main python file for team robotic-lynx's a-Maze-ing challenge submission.
"""

from enum import Enum
from generator import Generator
from maze import Maze, MazeInfo
from solver import Solver
from visualizer import *

# select an existing text maze
# input maze type
# input maze size (mxn for reg, l for hex)

# select mode: interactive vs path generated


class UserType(Enum):
    Interactive = 0
    Autogenerated = 0


# If you want to skip inputs and determine parameters manually
BYPASS_USER_INPUT = True


if __name__ == "__main__" and not BYPASS_USER_INPUT:
    # Ask about the maze type and size
    # Ask about what mode they want to enter (interactive, autogenerated)
    type = input(f"Enter the input mode you would like \[{
                 [e.value for e in UserType]}\]")

    filepath = input(
        "If you'd like to load a maze from text, please enter file path here:")
else:
    # Generate a maze
    creator = Generator()
    maze = creator.generate_rectangular_maze(
        MazeInfo(MazeInfo.MazeType.GridMaze, size=(10, 10)))
    # Solve the maze and obtain the solution
    solver = Solver(Solver.SolverAlgorithm.Wavefront, maze)
    path = solver.solve()
    # Visualize the maze and the solved path
